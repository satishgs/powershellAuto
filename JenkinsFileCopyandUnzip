pipeline {
    agent { label 'windows10' }

    stages {
        stage('Copy Zip') {
            steps {
                script {
                    env.SOURCE_PATH = "\\\\Network\\Path\\To\\Your\\Archive.zip"
                    env.DEST_PATH = "C:\\Local\\Path\\To\\Your\\Archive.zip"

                    powershell '''
                    # Check if source file exists
                    if (!(Test-Path -Path "$Env:SOURCE_PATH")) {
                        Write-Error "Source file $Env:SOURCE_PATH does not exist."
                        exit 1
                    }

                    # Check if destination directory exists, if not, create it
                    $destinationDir = Split-Path -Path "$Env:DEST_PATH" -Parent
                    if (!(Test-Path -Path $destinationDir)) {
                        New-Item -ItemType Directory -Path $destinationDir | Out-Null
                    }

                    # Copy the file from the network drive to the local directory with progress
                    $bufferSize = 8192
                    $sourceStream = [System.IO.File]::OpenRead("$Env:SOURCE_PATH")
                    $targetStream = [System.IO.File]::OpenWrite("$Env:DEST_PATH")
                    $buffer = New-Object byte[] $bufferSize
                    $totalLength = $sourceStream.Length
                    $bytesRead = 0

                    try {
                        do {
                            $readLength = $sourceStream.Read($buffer, 0, $bufferSize)
                            $targetStream.Write($buffer, 0, $readLength)
                            $bytesRead += $readLength
                            $progress = [math]::Round(($bytesRead / $totalLength) * 100, 2)
                            Write-Progress -Activity "Copying $Env:SOURCE_PATH" -Status "$progress% Complete" -PercentComplete $progress
                        } while ($readLength -ne 0)
                    }
                    finally {
                        $sourceStream.Close()
                        $targetStream.Close()
                    }

                    Write-Output "Copied $Env:SOURCE_PATH to $Env:DEST_PATH"
                    '''
                }
            }
        }

        stage('Unpack Zip') {
            steps {
                script {
                    env.ZIP_PATH = "C:\\Local\\Path\\To\\Your\\Archive.zip"
                    env.UNPACK_PATH = "C:\\Destination\\Path"

                    powershell '''
                    # Function to unpack a zip file
                    function Unpack-ZipFile {
                        param(
                            [Parameter(Mandatory=$true)]
                            [string] $ZipFilePath,

                            [Parameter(Mandatory=$true)]
                            [string] $DestinationPath
                        )

                        # Validate the Zip file path
                        if (![IO.Path]::IsPathRooted($ZipFilePath) -or !(Test-Path -Path $ZipFilePath -PathType Leaf)) {
                            throw "Invalid ZipFilePath: $ZipFilePath. Please provide a valid path to the Zip file."
                        }

                        # Validate the Destination directory path
                        if (![IO.Path]::IsPathRooted($DestinationPath)) {
                            throw "Invalid DestinationPath: $DestinationPath. Please provide a valid destination directory path."
                        }

                        # Create the destination directory if it does not exist
                        if (!(Test-Path -Path $DestinationPath -PathType Container)) {
                            New-Item -ItemType Directory -Path $DestinationPath | Out-Null
                        }

                        # Get the total size of the zip file
                        $totalSize = (Get-Item -Path $ZipFilePath).Length
                        $unzippedSize = 0

                        # Create a shell application object to handle the zip file
                        $shellApp = New-Object -ComObject Shell.Application
                        $zipFolder = $shellApp.NameSpace($ZipFilePath)
                        $destinationFolder = $shellApp.NameSpace($DestinationPath)

                        # Iterate over each item in the zip file
                        foreach ($item in $zipFolder.Items()) {
                            # Copy the item to the destination folder
                            $destinationFolder.CopyHere($item)

                            # Update the unzipped size and print progress
                            $unzippedSize += $item.Size
                            $progress = [math]::Round(($unzippedSize / $totalSize) * 100, 2)
                            Write-Progress -Activity "Unpacking $ZipFilePath" -Status "$progress% Complete" -PercentComplete $progress
                        }

                        Write-Output "Unpacked $ZipFilePath to $DestinationPath"
                    }

                    # Example usage
                    Unpack-ZipFile -ZipFilePath "$Env:ZIP_PATH" -DestinationPath "$Env:UNPACK_PATH"
                    '''
                }
            }
        }
    }
}
