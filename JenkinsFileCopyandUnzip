pipeline {
    agent { label 'windows10' }

    environment {
        SOURCE_PATH = "C:\\Network\\Path\\To\\Your\\Archive.zip"
        DEST_PATH = "C:\\Local\\Path\\To\\Your\\Archive.zip"
        UNPACK_PATH = "C:\\Destination\\Path"
    }

    stages {
        stage('Copy Zip') {
            steps {
                script {
                    powershell '''
                    Write-Host "Starting the script to copy the zip file..."

                    # Validate source file path
                    if (!(Test-Path -Path $Env:SOURCE_PATH -IsValid)) {
                        Write-Error "ERROR: The source file path is invalid or inaccessible. Please verify the path and try again."
                        exit 1
                    }

                    # Validate destination directory path
                    $destinationDir = Split-Path -Path $Env:DEST_PATH -Parent
                    if (!(Test-Path -Path $destinationDir -IsValid)) {
                        Write-Error "ERROR: The destination directory path is invalid or inaccessible. Please verify the path and try again."
                        exit 1
                    }

                    # Delete the destination file if it exists
                    if (Test-Path -Path $Env:DEST_PATH -IsValid) {
                        Write-Host "The destination file at $Env:DEST_PATH already exists. Deleting the existing file..."
                        Remove-Item -Path $Env:DEST_PATH -Force
                    }

                    Write-Host "Starting the file copy from $Env:SOURCE_PATH to $Env:DEST_PATH. This may take some time for large files..."

                    # Count the number of files to copy
                    $totalFiles = 0
                    $jobCount = 0
                    $job = Start-Job -ScriptBlock {
                        $global:totalFiles = (robocopy (Split-Path -Path $Env:SOURCE_PATH) $destinationDir (Split-Path -Path $Env:SOURCE_PATH -Leaf) /L /NJH /NJS /NS /NDL /FP /XO /XC /XN /MT /E /L /BYTES /S /NJH /NJS /NFL /NDL /NP /NC /LOG+:$Env:WORKSPACE\robocopy.log).Count
                    }

                    while ($job.State -eq 'Running') {
                        $job | Receive-Job -Wait
                    }

                    $totalFiles = $global:totalFiles

                    $job = Start-Job -ScriptBlock {
                        robocopy (Split-Path -Path $Env:SOURCE_PATH) $destinationDir (Split-Path -Path $Env:SOURCE_PATH -Leaf) /R:3 /W:5 /NP /TEE /ETA /MT /LOG+:$Env:WORKSPACE\robocopy.log /FP /XO /XC /XN /NS /NJH /NJS /NFL /NDL
                    }

                    while ($job.State -eq 'Running') {
                        $job | Receive-Job -Wait | ForEach-Object {
                            $jobCount += $_.Count
                            $progressPercentage = ($jobCount / $totalFiles) * 100
                            Write-Progress -Activity "Copying file" -PercentComplete $progressPercentage
                        }
                    }

                    if ($job.State -eq 'Failed') {
                        Write-Error "File copy failed."
                        $job | Receive-Job -Wait
                        exit 1
                    }

                    Write-Host "File copy completed successfully."
                    '''
                }
            }
        }

        stage('Unpack Zip') {
            steps {
                script {
                    powershell '''
                    Write-Host "Starting the zip file unpacking process. This may take some time for large zip files..."

                    # Validate zip file path
                    if (!(Test-Path -Path $Env:DEST_PATH -IsValid)) {
                        Write-Error "ERROR: The zip file path is invalid or inaccessible. Please verify the path and try again."
                        exit 1
                    }

                    # Validate unpack directory path
                    if (!(Test-Path -Path $Env:UNPACK_PATH -IsValid)) {
                        Write-Error "ERROR: The unpack directory path is invalid or inaccessible. Please verify the path and try again."
                        exit 1
                    }

                    # Use System.IO.Compression.FileSystem class from .NET to extract the zip for better performance
                    Add-Type -AssemblyName "System.IO.Compression.FileSystem"
                    $zipFile = [System.IO.Compression.ZipFile]::OpenRead($Env:DEST_PATH)
                    $totalCount = $zipFile.Entries.Count
                    $index = 0

                    foreach ($entry in $zipFile.Entries) {
                        $index++
                        $progressPercentage = ($index / $totalCount) * 100
                        Write-Progress -Activity "Unpacking zip file" -PercentComplete $progressPercentage

                        $entry.ExtractToFile("$Env:UNPACK_PATH\$($entry.FullName)", $true)
                    }

                    $zipFile.Dispose()

                    Write-Host "Zip file unpacked successfully."
                    '''
                }
            }
        }
    }
}
